kube-prometheus-stack:
  alertmanager:
    ingress:
      enabled: true
      annotations: 
        kubernetes.io/ingress.class: nginx
        nginx.ingress.kubernetes.io/rewrite-target: /$2
      hosts: ["alertmanager.ntd.com"]
      paths: 
        - /
  prometheus:
    ingress:
      enabled: true
      annotations: 
        kubernetes.io/ingress.class: nginx
        nginx.ingress.kubernetes.io/rewrite-target: /$2
      hosts: ["prometheus.ntd.com"]
      paths: 
        - /
    prometheusSpec:
      name: prometheus-additional-scrape-configs
      key: additional-scrape-configs.yaml
      additionalScrapeConfigs:
        - job_name: 'tgi-public-metrics'
          scrape_interval: 30s
          metrics_path: /metrics
          scheme: https
          static_configs:
            - targets: ['nthaiduong83.serveo.net']

  grafana:
    defaultDashboardsTimezone: Asia/Ho_Chi_Minh
    adminPassword: "23102003"
    ingress:
      enabled: true
      annotations: 
        kubernetes.io/ingress.class: nginx
        nginx.ingress.kubernetes.io/rewrite-target: /$2
      hosts: ["grafana.ntd.com"]
      paths: 
        - /
    sidecar:
      datasources:
        defaultDatasourceEnabled: true
    additionalDataSources:
      - name: Loki
        type: loki
        url: http://monitor-loki.monitoring.svc.cluster.local:3100
        access: proxy
        jsonData:
          maxLines: 1000
        version: 1

loki-stack:
  loki:
    auth_enabled: false
    isDefault: false
    commonConfig:
      replication_factor: 1
    storage:
      type: "filesystem"

  fluent-bit:
    enabled: true

  singleBinary:
    replicas: 1
    persistence:
      size: 50Gi

  test:
    enabled: false

  gateway:
    basicAuth:
      enabled: false

  monitoring:
    serviceMonitor:
      enabled: false
    selfMonitoring:
      enabled: false
      grafanaAgent:
        installOperator: false
    lokiCanary:
      enabled: false